extends "res://ActionAnimationManager.gd"


const STARTUP_SPRITE_ANIME_ID = 0
const ACTIVE_SPRITE_ANIME_ID = 1
const COMPLETION_SPRITE_ANIME_ID = 2
const AIR_IDLE_SPRITE_ANIME_ID = 3
const GROUND_IDLE_SPRITE_ANIME_ID = 4
const LANDING_LAG_SPRITE_ANIME_ID=5
const WALK_TOWARD_WHISTLE_SPRITE_ANIME_ID = 6
const AIR_MOVE_TOWARD_WHISTLE_SPRITE_ANIME_ID = 7
const BACKWARD_TOOL_WALK_STARTUP_SPRITE_ANIME_ID = 8
const DOWNWARD_TOOL_EXCITED_SPRITE_ANIME_ID = 9
const DOWNWARD_TOOL_DIG_SPRITE_ANIME_ID = 10
const UPWARD_TOOL_WALK_FORWARD_SPRITE_ANIME_ID = 11
const UPWARD_TOOL_JUMP_ATTACK_SPRITE_ANIME_ID = 12
const UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_SPRITE_ANIME_ID = 13
const FORWARD_TOOL_WALK_STARTUP_SPRITE_ANIME_ID = 14
const FORWARD_TOOL_WALK_ACTIVE_SPRITE_ANIME_ID = 15
const FORWARD_TOOL_WALL_ARRIVE_SPRITE_ANIME_ID = 16
const FORWARD_TOOL_ATTACK_DASH_SPRITE_ANIME_ID = 17
const BACKWARD_TOOL_WALK_ACTIVE_SPRITE_ANIME_ID = 18
const BACKWARD_TOOL_WALL_ARRIVE_SPRITE_ANIME_ID = 19
const BACKWARD_TOOL_ATTACK_DASH_SPRITE_ANIME_ID = 20
const UP_TOOL_RECOVERY_SPRITE_ANIME_ID = 21

#Movement animation ids
const STARTUP_MVM_ANIME_ID = 0
const ACTIVE_MVM_ANIME_ID = 1
const COMPLETION_MVM_ANIME_ID = 2
const MOMENTUM_STOP_MVM_ANIME_ID = 3
const WALK_TOWARD_WHISTLE_MVM_ANIME_ID=4
const AIR_MOVE_TOWARD_WHISTLE_MVM_ANIME_ID=5
const ZERO_AIR_MOEMENTUM_MVM_ANIME_ID=6
const BACKWARD_TOOL_MVM_ANIME_ID = 7
const UPWARD_TOOL_WALK_FORWARD_MVM_ANIME_ID = 8
const UPWARD_TOOL_JUMP_ATTACK_MVM_ANIME_ID = 9
const UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_MVM_ANIME_ID = 10
const FORWARD_TOOL_WALK_FORWARD_MVM_ANIME_ID= 11
const FORWARD_TOOL_ATTACK_DASH_MVM_ANIME_ID= 12
const DOWNWARD_TOOL_EXCITED_MVM_ANIME_ID=13
const BACKWARD_TOOL_ATTACK_DASH_MVM_ANIME_ID = 14

#action  animation ids
const STARTUP_ACTION_ID = 0
const ACTIVE_ACTION_ID = 1
const COMPLETION_ACTION_ID = 2
const GROUND_IDLE_ACTION_ID = 3
const LANDING_LAG_ACTION_ID=4
const AIR_IDLE_ACTION_ID = 5
const WALK_TOWARD_WHISTLE_ACTION_ID=6
const AIR_MOVE_TOWARD_WHISTLE_ACTION_ID=7
const BACKWARD_TOOL_WALK_STARTUP_ACTION_ID = 8

const UPWARD_TOOL_WALK_FORWARD_ACTION_ID = 10
const UPWARD_TOOL_JUMP_ATTACK_ACTION_ID = 11
const UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_ACTION_ID = 12
const FORWARD_TOOL_WALK_STARTUP_ACTION_ID = 13
const FORWARD_TOOL_WALK_ACTIVE_ACTION_ID = 14
const FORWARD_TOOL_WALL_ARRIVE_ACTION_ID = 15
const FORWARD_TOOL_ATTACK_DASH_ACTION_ID = 16
const DOWNWARD_TOOL_EXCITED_ACTION_ID = 9
const DOWNWARD_TOOL_DIG_ACTION_ID = 17
const BACKWARD_TOOL_WALK_ACTIVE_ACTION_ID = 18
const BACKWARD_TOOL_WALL_ARRIVE_ACTION_ID =19
const BACKWARD_TOOL_ATTACK_DASH_ACTION_ID= 20
const UPWARD_TOOL_RECOVERY_ACTION_ID=21
const MOMENTUM_STOP_ACTION_ID=22

const LARGEST_ACTION_ID=22
var idleSpriteAnimationMap={}


const NORMAL_STANCE_IX = 0 # stance for every animation except those in the air after hitting with up tool
const AIRBORN_UP_TOOL_ON_HIT_STANCE_IX=1
const LARGEST_STANCE_IX=AIRBORN_UP_TOOL_ON_HIT_STANCE_IX
var currentActionIdGroup = NORMAL_STANCE_IX

var actionIdGroups = []

func _ready():

	#this is so the action remapping from stance doesn't break
	HITSTUN_SPRITE_ANIME_ID = UNKNOWN_ACTION_ID
	HITSTUN_ACTION_ID = UNKNOWN_ACTION_ID
	LANDING_HITSTUN_ACTION_ID = UNKNOWN_ACTION_ID
	AIR_HITSTUN_ACTION_ID = UNKNOWN_ACTION_ID
	INVULNERABLE_AIR_HITSTUN_ACTION_ID = UNKNOWN_ACTION_ID



	#iterate all actions
	var i = 0
	while i <= LARGEST_ACTION_ID:
		
		#by default actions are the same regardless
		#of if glove has ball of not
		var actionPairRow = []
		var j = 0
		while j<=LARGEST_STANCE_IX:
			actionPairRow.append(i)
			j = j+1
		#actionPairRow.append(i)
		
		#add the id pair row
		actionIdGroups.append(actionPairRow)
		i = i +1
	
	
#keep in mind, that playing animations, if one of the actionid are  any below, it will no function properly
#LANDING_HITSTUN_ACTION_ID = 35
	#INVULNERABLE_AIR_HITSTUN_ACTION_ID = 38
	#AIR_HITSTUN_ACTION_ID=HITSTUN_ACTION_ID
	
	animationLookup[SPRITE_ANIME_IX][STARTUP_ACTION_ID]=STARTUP_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][ACTIVE_ACTION_ID]=ACTIVE_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][COMPLETION_ACTION_ID]=COMPLETION_SPRITE_ANIME_ID	
	animationLookup[SPRITE_ANIME_IX][GROUND_IDLE_ACTION_ID]=GROUND_IDLE_SPRITE_ANIME_ID	
	animationLookup[SPRITE_ANIME_IX][LANDING_LAG_ACTION_ID]=LANDING_LAG_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][AIR_IDLE_ACTION_ID]=AIR_IDLE_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][WALK_TOWARD_WHISTLE_ACTION_ID]=WALK_TOWARD_WHISTLE_SPRITE_ANIME_ID	
	animationLookup[SPRITE_ANIME_IX][AIR_MOVE_TOWARD_WHISTLE_ACTION_ID]=AIR_MOVE_TOWARD_WHISTLE_SPRITE_ANIME_ID
	



	animationLookup[SPRITE_ANIME_IX][DOWNWARD_TOOL_EXCITED_ACTION_ID]=DOWNWARD_TOOL_EXCITED_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][DOWNWARD_TOOL_DIG_ACTION_ID]=DOWNWARD_TOOL_DIG_SPRITE_ANIME_ID

	animationLookup[SPRITE_ANIME_IX][FORWARD_TOOL_WALK_STARTUP_ACTION_ID]=FORWARD_TOOL_WALK_STARTUP_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][FORWARD_TOOL_WALK_ACTIVE_ACTION_ID]=FORWARD_TOOL_WALK_ACTIVE_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][FORWARD_TOOL_WALL_ARRIVE_ACTION_ID]=FORWARD_TOOL_WALL_ARRIVE_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][FORWARD_TOOL_ATTACK_DASH_ACTION_ID]=FORWARD_TOOL_ATTACK_DASH_SPRITE_ANIME_ID
	
	animationLookup[SPRITE_ANIME_IX][BACKWARD_TOOL_WALK_STARTUP_ACTION_ID]=BACKWARD_TOOL_WALK_STARTUP_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][BACKWARD_TOOL_WALK_ACTIVE_ACTION_ID]=BACKWARD_TOOL_WALK_ACTIVE_SPRITE_ANIME_ID	
	animationLookup[SPRITE_ANIME_IX][BACKWARD_TOOL_WALL_ARRIVE_ACTION_ID]=BACKWARD_TOOL_WALL_ARRIVE_SPRITE_ANIME_ID		
	animationLookup[SPRITE_ANIME_IX][BACKWARD_TOOL_ATTACK_DASH_ACTION_ID]=BACKWARD_TOOL_ATTACK_DASH_SPRITE_ANIME_ID	

	
	animationLookup[SPRITE_ANIME_IX][UPWARD_TOOL_WALK_FORWARD_ACTION_ID]=UPWARD_TOOL_WALK_FORWARD_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][UPWARD_TOOL_JUMP_ATTACK_ACTION_ID]=UPWARD_TOOL_JUMP_ATTACK_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_ACTION_ID]=UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][UPWARD_TOOL_RECOVERY_ACTION_ID]=UP_TOOL_RECOVERY_SPRITE_ANIME_ID
	animationLookup[SPRITE_ANIME_IX][MOMENTUM_STOP_ACTION_ID]=null

	
	animationLookup[MVM_ANIME_IX][STARTUP_ACTION_ID]=STARTUP_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][ACTIVE_ACTION_ID]=ACTIVE_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][COMPLETION_ACTION_ID]=COMPLETION_MVM_ANIME_ID	
	animationLookup[MVM_ANIME_IX][GROUND_IDLE_ACTION_ID]=MOMENTUM_STOP_MVM_ANIME_ID	
	animationLookup[MVM_ANIME_IX][LANDING_LAG_ACTION_ID]=MOMENTUM_STOP_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][AIR_IDLE_ACTION_ID]=ZERO_AIR_MOEMENTUM_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][WALK_TOWARD_WHISTLE_ACTION_ID]=WALK_TOWARD_WHISTLE_MVM_ANIME_ID	
	animationLookup[MVM_ANIME_IX][AIR_MOVE_TOWARD_WHISTLE_ACTION_ID]=AIR_MOVE_TOWARD_WHISTLE_MVM_ANIME_ID
	
	animationLookup[MVM_ANIME_IX][FORWARD_TOOL_WALK_STARTUP_ACTION_ID]=FORWARD_TOOL_WALK_FORWARD_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][FORWARD_TOOL_WALK_ACTIVE_ACTION_ID]=FORWARD_TOOL_WALK_FORWARD_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][FORWARD_TOOL_WALL_ARRIVE_ACTION_ID]=MOMENTUM_STOP_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][FORWARD_TOOL_ATTACK_DASH_ACTION_ID]=FORWARD_TOOL_ATTACK_DASH_MVM_ANIME_ID
	
	animationLookup[MVM_ANIME_IX][BACKWARD_TOOL_WALK_STARTUP_ACTION_ID]=BACKWARD_TOOL_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][BACKWARD_TOOL_WALK_ACTIVE_ACTION_ID]=BACKWARD_TOOL_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][BACKWARD_TOOL_WALL_ARRIVE_ACTION_ID]=MOMENTUM_STOP_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][BACKWARD_TOOL_ATTACK_DASH_ACTION_ID]=BACKWARD_TOOL_ATTACK_DASH_MVM_ANIME_ID
	
	animationLookup[MVM_ANIME_IX][DOWNWARD_TOOL_DIG_ACTION_ID]=MOMENTUM_STOP_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][DOWNWARD_TOOL_EXCITED_ACTION_ID]=DOWNWARD_TOOL_EXCITED_MVM_ANIME_ID

	
	animationLookup[MVM_ANIME_IX][UPWARD_TOOL_WALK_FORWARD_ACTION_ID]=UPWARD_TOOL_WALK_FORWARD_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][UPWARD_TOOL_JUMP_ATTACK_ACTION_ID]=UPWARD_TOOL_JUMP_ATTACK_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_ACTION_ID]=UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][UPWARD_TOOL_RECOVERY_ACTION_ID]=MOMENTUM_STOP_MVM_ANIME_ID
	animationLookup[MVM_ANIME_IX][MOMENTUM_STOP_ACTION_ID]=MOMENTUM_STOP_MVM_ANIME_ID
	
	idleSpriteAnimationMap[LANDING_LAG_SPRITE_ANIME_ID]=null
	idleSpriteAnimationMap[AIR_IDLE_SPRITE_ANIME_ID]=null
	idleSpriteAnimationMap[GROUND_IDLE_SPRITE_ANIME_ID]=null	
	idleSpriteAnimationMap[WALK_TOWARD_WHISTLE_SPRITE_ANIME_ID]=null


	
		
	actionIdGroups[BACKWARD_TOOL_WALK_STARTUP_ACTION_ID][NORMAL_STANCE_IX]=BACKWARD_TOOL_WALK_STARTUP_ACTION_ID	
	actionIdGroups[BACKWARD_TOOL_WALK_STARTUP_ACTION_ID][AIRBORN_UP_TOOL_ON_HIT_STANCE_IX]=UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_ACTION_ID
	
	#actionIdGroups[DOWNWARD_TOOL_EXCITED_ACTION_ID][NORMAL_STANCE_IX]=DOWNWARD_TOOL_EXCITED_ACTION_ID	
	#actionIdGroups[DOWNWARD_TOOL_EXCITED_ACTION_ID][AIRBORN_UP_TOOL_ON_HIT_STANCE_IX]=UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_ACTION_ID
	
	actionIdGroups[FORWARD_TOOL_WALK_STARTUP_ACTION_ID][NORMAL_STANCE_IX]=FORWARD_TOOL_WALK_STARTUP_ACTION_ID	
	actionIdGroups[FORWARD_TOOL_WALK_STARTUP_ACTION_ID][AIRBORN_UP_TOOL_ON_HIT_STANCE_IX]=UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_ACTION_ID
	
	actionIdGroups[UPWARD_TOOL_WALK_FORWARD_ACTION_ID][NORMAL_STANCE_IX]=UPWARD_TOOL_WALK_FORWARD_ACTION_ID	
	actionIdGroups[UPWARD_TOOL_WALK_FORWARD_ACTION_ID][AIRBORN_UP_TOOL_ON_HIT_STANCE_IX]=UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_ACTION_ID
	
	actionIdGroups[UPWARD_TOOL_JUMP_ATTACK_ACTION_ID][NORMAL_STANCE_IX]=UPWARD_TOOL_JUMP_ATTACK_ACTION_ID	
	actionIdGroups[UPWARD_TOOL_JUMP_ATTACK_ACTION_ID][AIRBORN_UP_TOOL_ON_HIT_STANCE_IX]=UP_TOOL_ON_HIT_ANY_AIR_TOOL_DRAG_ATTACK_ACTION_ID
	
	


	
		#make a backup of the map of animations	
	for actionId in animationLookup[SPRITE_ANIME_IX].keys():
		animationLookupDefault[SPRITE_ANIME_IX][actionId]=animationLookup[SPRITE_ANIME_IX][actionId]
	for actionId in animationLookup[MVM_ANIME_IX].keys():
		animationLookupDefault[MVM_ANIME_IX][actionId]=animationLookup[MVM_ANIME_IX][actionId]
		

func isInUpToolAirHitStance():
	return currentActionIdGroup == AIRBORN_UP_TOOL_ON_HIT_STANCE_IX
	
func enterUpToolAirHitStance():
	
	currentActionIdGroup = AIRBORN_UP_TOOL_ON_HIT_STANCE_IX
	
func leaveUpToolAirHitStance():
	currentActionIdGroup = NORMAL_STANCE_IX
		

#sub classes can override this to change the aciton id dynamically
#depending on some special state. This function will be called when resolving the
#sprite id and movement id
func actionIdRemapHook(actionId): 
	return _actionIdRemapHook(actionId,currentActionIdGroup)
	
func _actionIdRemapHook(actionId,stanceIx):
	if actionId == null:
		return null
	return actionIdGroups[actionId][stanceIx]